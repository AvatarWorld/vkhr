#version 460 core

#include "sample_volume.glsl"
#include "../strand/strand.glsl"
#include "bounding_box.glsl"

layout(std430, binding = 0) buffer Vertices {
    vec3 position[];
};

layout(std430, binding = 1) buffer Tangents {
    vec3 tangents[];
};

layout(local_size_x = 512) in;

layout(binding = 3, r32ui) uniform uimage3D strand_density;

void main() {
    vec3 voxel_size = volume_bounds.size / volume_resolution;
    vec3 voxel = (position[gl_GlobalInvocationID.x] - volume_bounds.origin) / voxel_size;
    imageAtomicAdd(strand_density, ivec3(voxel), 1);
}
